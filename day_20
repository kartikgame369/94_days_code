paytem clone means like same funcation add 
  working on it just normally frontend backend and mongoose 
  jwt token and middleware are used step by step tasks

  i put my some code here 

  const express = require("express");
// const mongoose = require("mongoose");
const mainRouter = require("./routes/index");
const cors = require('cors');
const bodyParser = require('body-parser');
const jwt = require('jsonwebtoken');

const app = express();
app.use(cors());
app.use(bodyParser.json());

app.use("/api/v1",mainRouter);
app.use("/api/v2",v2Router);

    
app.listen(3000);
  


import mongoose from 'mongoose';
const { Schema } = mongoose;

mongoose.connect("mongodb+srv://beastkartik369:KARtik%40369@cluster0.sufwbf5.mongodb.net/User_details")

const Signup = new Schema({
 frist_name:String,
 last_name:String,
 email:String,
 password:String

});

const userschema = new mongoose.Schema({
    userschema:{
        type:String,
        required:true,
        unique: true,
        trim:true,
        lowercase:true,
        minLenth:3,
        maxLength:30
    },
    password:{
        type:String,
        required:true,
        minLength:6
    },
    frist_name:{
        type:String,
        required:true,
        trim:true,
        maxLength:50
    },
    last_name:{
        type:String,
        required: true,
        trim:true,
        maxLength:50
    }

});


const User = mongoose.model("User",Signup);

module.export = {
    User
}

const {JWT_SECRET} = require("./config");
const jwt = require("jsonwebtoken");

const authMiddleware = (req,res,next)=>{
    const authheader = req.headers.authorization;

    if(!authheader|| !authheader.startWith('bearer')){
        return res.status(403).json({});

    }

    const token = authheader.split("")[1];
    try{
        const decode = jwt.verify(token,JWT_SECRET);
        if(decode.userID){
            req.userID=decode.userID;
            next();
        }

        

    }catch(err){
        return res.status(403).json({});
    }
}

module.export={
    authMiddleware
}


const express = require("express");
const router = express.Router();
const mainRouter= require("./routes/index")

router.use("/user",UserRouter);

module.export = router;

const express = require("express")
const router = express.Router();

app.post('/signup', (req, res) => {
    // Handle the sign-up logic here
    const { username, email, password } = req.body;

    // 1. Validate user input (e.g., check for empty fields, valid email format, password strength)
    if (!username || !email || !password) {
        return res.status(400).send('Please provide username, email, and password.');
    }

    // Continue with signup logic, e.g. saving the user, etc.
});

module.export = router;
